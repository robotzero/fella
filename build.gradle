plugins {
	id 'org.springframework.boot' version '2.4.6'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.queen'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

allprojects {

	tasks.withType(JavaCompile) {
//        	options.compilerArgs.addAll(['--add-exports', 'java.base/java.lang.reflect=ALL-UNNAMED', '--enable-preview'])
//	        options.compilerArgs.addAll(['--add-exports', 'jdk.unsupported/sun.misc=ALL-UNNAMED'])
        	options.compilerArgs.addAll(['--enable-preview'])
	        options.forkOptions.jvmArgs.addAll( ['--add-opens', 'jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED'] )
	        options.encoding = 'UTF-8'
	        options.deprecation = true
    }
}

compileJava {
  options.warnings = true
  options.deprecation = true
  options.debug = true
  options.compilerArgs += ["--add-modules=jdk.incubator.foreign"]
  options.incremental = false
}

configurations {
	compile.exclude module: 'spring-boot-starter-tomcat'
	compile.exclude module: 'org.springframework:spring-webmvc'
	compile.exclude module: 'spring-boot-starter-websocket'
	compile.exclude module:	'spring-web'
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-reactor-netty'
	implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.security:spring-security-oauth2-jose'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.12.3'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.12.3'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.3'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.3'
	implementation 'com.fasterxml.jackson.module:jackson-module-parameter-names:2.12.3'
	implementation 'org.springframework.hateoas:spring-hateoas:1.3.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2',
			// Uncomment the next line if you want to use RSASSA-PSS (PS256, PS384, PS512) algorithms:
			'org.bouncycastle:bcprov-jdk15on:1.60',
			'io.jsonwebtoken:jjwt-jackson:0.11.2' // or 'io.jsonwebtoken:jjwt-gson:0.11.2' for gson
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'io.r2dbc:r2dbc-h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
      useJUnitPlatform()
      jvmArgs '--add-modules=jdk.incubator.foreign'
}
