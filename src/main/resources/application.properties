server.port=8090
logging.level.root=INFO
logging.level.org.springframework.security=INFO
logging.level.org.springframework.security.oauth2=INFO
logging.level.org.springframework.web=INFO
debug=false
management.endpoints.web.exposure.include=*
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://auth-server:9000

spring.thymeleaf.cache=false
spring.security.oauth2.client.registration.messaging-client-oidc.provider=spring
spring.security.oauth2.client.registration.messaging-client-oidc.client-id=messaging-client
spring.security.oauth2.client.registration.messaging-client-oidc.client-secret=secret
spring.security.oauth2.client.registration.messaging-client-oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.messaging-client-oidc.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.messaging-client-oidc.scope=openid
spring.security.oauth2.client.registration.messaging-client-oidc.client-name=messaging-client-oidc

spring.security.oauth2.client.registration.messaging-client-authorization-code.provider=spring
spring.security.oauth2.client.registration.messaging-client-authorization-code.client-id=messaging-client
spring.security.oauth2.client.registration.messaging-client-authorization-code.client-secret=secret
spring.security.oauth2.client.registration.messaging-client-authorization-code.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.messaging-client-authorization-code.redirect-uri={baseUrl}/authorized
spring.security.oauth2.client.registration.messaging-client-authorization-code.scope=message.read,message.write
spring.security.oauth2.client.registration.messaging-client-authorization-code.client-name=messaging-client-authorization-code

spring.security.oauth2.client.registration.messaging-client-client-credentials.provider=spring
spring.security.oauth2.client.registration.messaging-client-client-credentials.client-id=messaging-client
spring.security.oauth2.client.registration.messaging-client-client-credentials.client-secret=secret
spring.security.oauth2.client.registration.messaging-client-client-credentials.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.messaging-client-client-credentials.scope=message.read,message.write
spring.security.oauth2.client.registration.messaging-client-client-credentials.client-name=messaging-client-client-credentials
spring.security.oauth2.client.provider.spring.issuer-uri=http://auth-server:9000
